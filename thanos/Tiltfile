# Tiltfile
version_settings(constraint='>=0.33.21')
allow_k8s_contexts('docker-desktop')

print("""
-----------------------------------------------------------------
✨ Thanos DEMO
ℹ️ Tilt file: {tiltfile_path}
-----------------------------------------------------------------
""".format(tiltfile_path=config.main_path).strip())

load('ext://helm_resource', 'helm_resource', 'helm_repo')
load('ext://namespace', 'namespace_create', 'namespace_inject')

# LocalStack
namespace_create('localstack')
helm_repo(name='localstack-charts', url='https://localstack.github.io/helm-charts')
helm_resource(
    name='localstack',
    chart='localstack-charts/localstack',
    resource_deps=['localstack-charts'],
    namespace='localstack',
    flags=['--values=./localstack/helm/values.yaml']
)
k8s_resource(
    workload='localstack',
    links=[link('https://localhost:4566', 'localstack')],
)
local_resource(
    name='localstack-pf',
    serve_cmd='kubectl port-forward -n localstack svc/localstack 4566:4566',
    resource_deps=['localstack']
)
k8s_resource(
    new_name='localstack-resources',
    objects=[
        'localstack:namespace',
    ]
)

# kube-prometheus-stack
namespace_create('monitoring')

helm_repo(name='prometheus-community', url='https://prometheus-community.github.io/helm-charts')
helm_resource(
    name='kube-prometheus-stack',
    chart='prometheus-community/kube-prometheus-stack',
    resource_deps=['prometheus-community'],
    namespace='monitoring',
    flags=[
        '--values=./kube-prometheus-stack/helm/values.yaml'
    ]
)

k8s_resource(
    new_name='kube-prometheus-stack-resources',
    objects=[
        'monitoring:namespace',
    ]
)

k8s_resource(
    workload='kube-prometheus-stack',
    links=[
        link('http://localhost:3000', 'grafana'),
        link('http://localhost:3001', 'prometheus'),
        link('http://localhost:3002', 'alermanager'),
    ],
)
local_resource(
    name='kube-prometheus-stack-grafana-pf',
    serve_cmd='kubectl port-forward -n monitoring svc/kube-prometheus-stack-grafana 3000:80',
    resource_deps=['kube-prometheus-stack']
)
local_resource(
    name='kube-prometheus-stack-prometheus-pf',
    serve_cmd='kubectl port-forward -n monitoring svc/kube-prometheus-stack-prometheus 3001:9090',
    resource_deps=['kube-prometheus-stack']
)
local_resource(
    name='kube-prometheus-stack-alermanager-pf',
    serve_cmd='kubectl port-forward -n monitoring svc/kube-prometheus-stack-alertmanager 3002:9093',
    resource_deps=['kube-prometheus-stack']
)

# Thanos
namespace_create('thanos')
helm_resource(
    name='thanos',
    chart='oci://registry-1.docker.io/bitnamicharts/thanos',
    namespace='thanos',
    flags=['--values=./thanos/helm/values.yaml']
)

k8s_resource(
    new_name='thanos-resources',
    objects=[
        'thanos:namespace',
    ]
)

k8s_resource(
    workload='thanos',
    links=[
        link('http://localhost:8080', 'thanos-bucketweb'),
        link('http://localhost:9090', 'thanos-query-frontend'),
    ],
)

local_resource(
    name='thanos-bucketweb-pf',
    serve_cmd='kubectl port-forward -n thanos svc/thanos-bucketweb 8080:8080',
    resource_deps=['thanos']
)
local_resource(
    name='thanos-query-frontend-pf',
    serve_cmd='kubectl port-forward -n thanos svc/thanos-query-frontend 9090:9090',
    resource_deps=['thanos']
)
