# Tiltfile
allow_k8s_contexts('docker-desktop')
update_settings(
    max_parallel_updates=3,
    k8s_upsert_timeout_secs=300,
    suppress_unused_image_warnings=None
)

load('ext://helm_resource', 'helm_resource', 'helm_repo')
load('ext://namespace', 'namespace_create')

print("""
-----------------------------------------------------------------
✨ KARGO DEMO PROJECT
ℹ️ Tilt file: {tiltfile_path}
-----------------------------------------------------------------
""".format(tiltfile_path=config.main_path).strip())

# Deploy ArgoCD
helm_repo(name='argo', url='https://argoproj.github.io/argo-helm')
namespace_create('argocd')
helm_resource(
    name='argocd',
    chart='argo/argo-cd',
    resource_deps=['argo'],
    namespace='argocd',
    flags=['--values=./argocd/values.yaml']
)
k8s_resource(
    workload='argocd',
    links=[link('https://localhost:8080', 'argocd')],
)
local_resource(
    name='argocd-pf',
    serve_cmd='kubectl port-forward -n argocd svc/argocd-server 8080:80',
    resource_deps=['argocd']
)

# Argo applications
namespace_create('kargo-demo-dev')
namespace_create('kargo-demo-stage')
namespace_create('kargo-demo-prod')
k8s_yaml([
    'argocd/demo-app/dev.yaml',
    'argocd/demo-app/stage.yaml',
    'argocd/demo-app/prod.yaml',
])
k8s_resource(
    new_name='argocd-apps',
    resource_deps=['argocd'],
    objects=[
        'kargo-demo-dev:namespace',
        'kargo-demo-stage:namespace',
        'kargo-demo-prod:namespace',
        'kargo-demo-dev:application:argocd',
        'kargo-demo-stage:application:argocd',
        'kargo-demo-prod:application:argocd',
    ]
)

# Deploy Argo-Rollouts
namespace_create('argo-rollouts')
helm_resource(
    name='argo-rollouts',
    chart='argo/argo-rollouts',
    resource_deps=['argo'],
    namespace='argo-rollouts',
    flags=['--values=./argo-rollouts/values.yaml']
)

# Deploy CertManager
namespace_create('cert-manager')
helm_repo(name='jetstack', url='https://charts.jetstack.io')
helm_resource(
    name='cert-manager',
    chart='jetstack/cert-manager',
    resource_deps=['jetstack'],
    namespace='cert-manager',
    flags=['--values=./cert-manager/values.yaml']
)

# Deploy Kargo
namespace_create('kargo')
helm_resource(
    name='kargo',
    chart='oci://ghcr.io/akuity/kargo-charts/kargo',
    namespace='kargo',
    resource_deps=['cert-manager', 'argo-rollouts', 'argocd'],
    flags=['--values=./kargo/values.yaml']
)
k8s_resource(
    workload='kargo',
    links=[link('https://localhost:9090', 'kargo-api')]
)
local_resource(
    name='kargo-forward',
    serve_cmd='kubectl port-forward -n kargo svc/kargo-api 9090:443',
    resource_deps=['kargo']
)

# Kargo application
namespace_create(
    name='kargo-demo',
    labels=['kargo.akuity.io/project: "true"']
)
k8s_yaml([
    'kargo/demo-app/project.yaml',
    'kargo/demo-app/secret.yaml',
    'kargo/demo-app/warehouse.yaml',
    'kargo/demo-app/stages/dev.yaml',
])
k8s_resource(
    new_name='kargo-demo-app',
    resource_deps=['kargo'],
    objects=[
        'kargo-demo:namespace',
        'kargo-demo:project:kargo',
        'kargo-demo-repo:secret:kargo-demo',
        'kargo-demo:warehouse:kargo-demo',
        'dev:stage:kargo-demo',
    ]
)
